{"version":3,"file":"process-utils.js","names":["getAvailablePort","defaultPort","Promise","resolve","ChildProcess","exec","error","stdout","portsInUse","regex","split","forEach","line","match","push","Number","port","includes"],"sources":["../../../../src/lib/process-utils/process-utils.ts"],"sourcesContent":["import ChildProcess from 'child_process';\n\n// Get an available port\n// Works on Unix systems\nexport function getAvailablePort(defaultPort: number = 3000): Promise<number> {\n  return new Promise((resolve) => {\n    // Get a list of all ports in use\n    ChildProcess.exec('lsof -i -P -n | grep LISTEN', (error, stdout) => {\n      if (error) {\n        // likely no permission, e.g. CI\n        resolve(defaultPort);\n        return;\n      }\n\n      const portsInUse: number[] = [];\n      const regex = /:(\\d+) \\(LISTEN\\)/;\n      stdout.split('\\n').forEach((line) => {\n        const match = regex.exec(line);\n        if (match) {\n          portsInUse.push(Number(match[1]));\n        }\n      });\n      let port = defaultPort;\n      while (portsInUse.includes(port)) {\n        port++;\n      }\n      resolve(port);\n    });\n  });\n}\n"],"mappings":";;;;;;;AAAA;AAIO,SAASA,gBAAgB,GAA8C;EAAA,IAA7CC,WAAmB,uEAAG,IAAI;EACzD,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAK;IAE9BC,sBAAY,CAACC,IAAI,CAAC,6BAA6B,EAAE,UAACC,KAAK,EAAEC,MAAM,EAAK;MAClE,IAAID,KAAK,EAAE;QAETH,OAAO,CAACF,WAAW,CAAC;QACpB;MACF;MAEA,IAAMO,UAAoB,GAAG,EAAE;MAC/B,IAAMC,KAAK,GAAG,mBAAmB;MACjCF,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC,UAACC,IAAI,EAAK;QACnC,IAAMC,KAAK,GAAGJ,KAAK,CAACJ,IAAI,CAACO,IAAI,CAAC;QAC9B,IAAIC,KAAK,EAAE;UACTL,UAAU,CAACM,IAAI,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC;MACF,CAAC,CAAC;MACF,IAAIG,IAAI,GAAGf,WAAW;MACtB,OAAOO,UAAU,CAACS,QAAQ,CAACD,IAAI,CAAC,EAAE;QAChCA,IAAI,EAAE;MACR;MACAb,OAAO,CAACa,IAAI,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"}