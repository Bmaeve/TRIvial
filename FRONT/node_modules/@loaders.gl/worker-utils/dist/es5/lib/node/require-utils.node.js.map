{"version":3,"file":"require-utils.node.js","names":["requireFromFile","filename","startsWith","fetch","response","text","code","requireFromString","process","cwd","require","options","Error","paths","Module","_nodeModulePaths","path","dirname","parent","module","newModule","concat","prependPaths","appendPaths","_compile","children","splice","indexOf","exports"],"sources":["../../../../src/lib/node/require-utils.node.ts"],"sourcesContent":["// Fork of https://github.com/floatdrop/require-from-string/blob/master/index.js\n// Copyright (c) Vsevolod Strukchinsky <floatdrop@gmail.com> (github.com/floatdrop)\n// MIT license\n\n// this file is not visible to webpack (it is excluded in the package.json \"browser\" field).\n\nimport Module from 'module';\nimport path from 'path';\n\n// Node.js Dynamically require from file\n// Relative names are resolved relative to cwd\n// This indirect function is provided because webpack will try to bundle `module.require`.\n// this file is not visible to webpack (it is excluded in the package.json \"browser\" field).\nexport async function requireFromFile(filename: string): Promise<any> {\n  if (filename.startsWith('http')) {\n    const response = await fetch(filename);\n    const code = await response.text();\n    return requireFromString(code);\n  }\n\n  if (!filename.startsWith('/')) {\n    filename = `${process.cwd()}/${filename}`;\n  }\n  return require(filename);\n}\n\n// Dynamically require from string\n// - `code` - Required - Type: string - Module code.\n// - `filename` - Type: string - Default: '' - Optional filename.\n// - `options.appendPaths` Type: Array List of paths, that will be appended to module paths.\n// Useful, when you want to be able require modules from these paths.\n// - `options.prependPaths` Type: Array Same as appendPaths, but paths will be prepended.\nexport function requireFromString(\n  code: string,\n  filename = '',\n  options?: {\n    prependPaths?: string[];\n    appendPaths?: string[];\n  }\n): any {\n  if (typeof filename === 'object') {\n    options = filename;\n    filename = '';\n  }\n\n  if (typeof code !== 'string') {\n    throw new Error(`code must be a string, not ${typeof code}`);\n  }\n\n  // @ts-ignore\n  const paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const parent = module.parent;\n  // @ts-ignore\n  const newModule = new Module(filename, parent);\n  newModule.filename = filename;\n  newModule.paths = ([] as string[])\n    .concat(options?.prependPaths || [])\n    .concat(paths)\n    .concat(options?.appendPaths || []);\n  // @ts-ignore\n  newModule._compile(code, filename);\n\n  if (parent && parent.children) {\n    parent.children.splice(parent.children.indexOf(newModule), 1);\n  }\n\n  return newModule.exports;\n}\n"],"mappings":";;;;;;;;;;;AAMA;AACA;AAAwB,SAMFA,eAAe;EAAA;AAAA;AAAA;EAAA,6EAA9B,iBAA+BC,QAAgB;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,KAChDA,QAAQ,CAACC,UAAU,CAAC,MAAM,CAAC;cAAA;cAAA;YAAA;YAAA;YAAA,OACNC,KAAK,CAACF,QAAQ,CAAC;UAAA;YAAhCG,QAAQ;YAAA;YAAA,OACKA,QAAQ,CAACC,IAAI,EAAE;UAAA;YAA5BC,IAAI;YAAA,iCACHC,iBAAiB,CAACD,IAAI,CAAC;UAAA;YAGhC,IAAI,CAACL,QAAQ,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;cAC7BD,QAAQ,aAAMO,OAAO,CAACC,GAAG,EAAE,cAAIR,QAAQ,CAAE;YAC3C;YAAC,iCACMS,OAAO,CAACT,QAAQ,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACzB;EAAA;AAAA;AAQM,SAASM,iBAAiB,CAC/BD,IAAY,EAMP;EAAA;EAAA,IALLL,QAAQ,uEAAG,EAAE;EAAA,IACbU,OAGC;EAED,IAAI,sBAAOV,QAAQ,MAAK,QAAQ,EAAE;IAChCU,OAAO,GAAGV,QAAQ;IAClBA,QAAQ,GAAG,EAAE;EACf;EAEA,IAAI,OAAOK,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIM,KAAK,4DAAsCN,IAAI,GAAG;EAC9D;;EAGA,IAAMO,KAAK,GAAGC,eAAM,CAACC,gBAAgB,CAACC,aAAI,CAACC,OAAO,CAAChB,QAAQ,CAAC,CAAC;EAE7D,IAAMiB,MAAM,GAAGC,MAAM,CAACD,MAAM;EAE5B,IAAME,SAAS,GAAG,IAAIN,eAAM,CAACb,QAAQ,EAAEiB,MAAM,CAAC;EAC9CE,SAAS,CAACnB,QAAQ,GAAGA,QAAQ;EAC7BmB,SAAS,CAACP,KAAK,GAAI,EAAE,CAClBQ,MAAM,CAAC,aAAAV,OAAO,6CAAP,SAASW,YAAY,KAAI,EAAE,CAAC,CACnCD,MAAM,CAACR,KAAK,CAAC,CACbQ,MAAM,CAAC,cAAAV,OAAO,8CAAP,UAASY,WAAW,KAAI,EAAE,CAAC;EAErCH,SAAS,CAACI,QAAQ,CAAClB,IAAI,EAAEL,QAAQ,CAAC;EAElC,IAAIiB,MAAM,IAAIA,MAAM,CAACO,QAAQ,EAAE;IAC7BP,MAAM,CAACO,QAAQ,CAACC,MAAM,CAACR,MAAM,CAACO,QAAQ,CAACE,OAAO,CAACP,SAAS,CAAC,EAAE,CAAC,CAAC;EAC/D;EAEA,OAAOA,SAAS,CAACQ,OAAO;AAC1B"}