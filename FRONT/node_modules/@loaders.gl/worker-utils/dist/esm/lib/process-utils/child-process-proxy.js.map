{"version":3,"file":"child-process-proxy.js","names":["ChildProcess","getAvailablePort","DEFAULT_PROPS","command","arguments","port","autoPort","wait","onSuccess","processProxy","console","log","props","ChildProcessProxy","constructor","id","start","args","Number","portArg","push","String","Promise","resolve","reject","_setTimeout","join","childProcess","spawn","stdout","on","data","toString","stderr","_clearTimeout","Error","error","code","stop","kill","exit","statusCode","process","message","callback","successTimer","setTimeout","clearTimeout"],"sources":["../../../../src/lib/process-utils/child-process-proxy.ts"],"sourcesContent":["/* eslint-disable no-console */\n// Avoid using named imports for Node builtins to help with \"empty\" resolution\n// for bundlers targeting browser environments. Access imports & types\n// through the `ChildProcess` object (e.g. `ChildProcess.spawn`, `ChildProcess.ChildProcess`).\nimport * as ChildProcess from 'child_process';\nimport {getAvailablePort} from './process-utils';\n\nexport type ChildProcessProxyProps = {\n  command: string;\n  arguments: string[];\n  /** Whether to add a port specified arg */\n  portArg?: string;\n  /** Base port number */\n  port?: number;\n  /** Whether to search for an available port if the base port is occupied */\n  autoPort?: boolean;\n  /** Number of milliseconds to wait until concluding success */\n  /** wait: 0 - infinity */\n  wait?: number;\n  /** Options passed on to Node'.js `spawn` */\n  spawn?: ChildProcess.SpawnOptionsWithoutStdio;\n  /** Callback when the  */\n  onStart?: (proxy: ChildProcessProxy) => void;\n  onSuccess?: (proxy: ChildProcessProxy) => void;\n};\n\nconst DEFAULT_PROPS: ChildProcessProxyProps = {\n  command: '',\n  arguments: [],\n  port: 5000,\n  autoPort: true,\n  wait: 2000,\n  onSuccess: (processProxy) => {\n    console.log(`Started ${processProxy.props.command}`);\n  }\n};\n\n/**\n * Manager for a Node.js child process\n * Prepares arguments, starts, stops and tracks output\n */\nexport default class ChildProcessProxy {\n  id: string;\n  props: ChildProcessProxyProps = {...DEFAULT_PROPS};\n  private childProcess: ChildProcess.ChildProcess | null = null;\n  private port: number = 0;\n  private successTimer?: any; // NodeJS.Timeout;\n\n  // constructor(props?: {id?: string});\n  constructor({id = 'browser-driver'} = {}) {\n    this.id = id;\n  }\n\n  /** Starts a child process with the provided props */\n  async start(props: ChildProcessProxyProps): Promise<object> {\n    props = {...DEFAULT_PROPS, ...props};\n    this.props = props;\n\n    const args = [...props.arguments];\n\n    // If portArg is set, we can look up an available port\n    this.port = Number(props.port);\n    if (props.portArg) {\n      if (props.autoPort) {\n        this.port = await getAvailablePort(props.port);\n      }\n      args.push(props.portArg, String(this.port));\n    }\n\n    return await new Promise((resolve, reject) => {\n      try {\n        this._setTimeout(() => {\n          if (props.onSuccess) {\n            props.onSuccess(this);\n          }\n          resolve({});\n        });\n\n        console.log(`Spawning ${props.command} ${props.arguments.join(' ')}`);\n        const childProcess = ChildProcess.spawn(props.command, args, props.spawn);\n        this.childProcess = childProcess;\n\n        childProcess.stdout.on('data', (data) => {\n          console.log(data.toString());\n        });\n        // TODO - add option regarding whether stderr should be treated as data\n        childProcess.stderr.on('data', (data) => {\n          console.log(`Child process wrote to stderr: \"${data}\".`);\n          this._clearTimeout();\n          reject(new Error(data));\n        });\n        childProcess.on('error', (error) => {\n          console.log(`Child process errored with ${error}`);\n          this._clearTimeout();\n          reject(error);\n        });\n        childProcess.on('close', (code) => {\n          console.log(`Child process exited with ${code}`);\n          this.childProcess = null;\n          this._clearTimeout();\n          resolve({});\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /** Stops a running child process */\n  async stop(): Promise<void> {\n    if (this.childProcess) {\n      this.childProcess.kill();\n      this.childProcess = null;\n    }\n  }\n\n  /** Exits this process */\n  async exit(statusCode: number = 0): Promise<void> {\n    try {\n      await this.stop();\n      // eslint-disable-next-line no-process-exit\n      process.exit(statusCode);\n    } catch (error) {\n      console.error((error as Error).message || error);\n      // eslint-disable-next-line no-process-exit\n      process.exit(1);\n    }\n  }\n\n  _setTimeout(callback: (...args: any[]) => void) {\n    if (Number(this.props.wait) > 0) {\n      this.successTimer = setTimeout(callback, this.props.wait);\n    }\n  }\n\n  _clearTimeout() {\n    if (this.successTimer) {\n      clearTimeout(this.successTimer);\n    }\n  }\n}\n"],"mappings":"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"}