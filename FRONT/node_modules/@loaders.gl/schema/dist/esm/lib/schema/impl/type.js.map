{"version":3,"file":"type.js","names":["Type","DataType","isNull","x","typeId","Null","isInt","Int","isFloat","Float","isBinary","Binary","isUtf8","Utf8","isBool","Bool","isDecimal","Decimal","isDate","Date","isTime","Time","isTimestamp","Timestamp","isInterval","Interval","isList","List","isStruct","Struct","isUnion","Union","isFixedSizeBinary","FixedSizeBinary","isFixedSizeList","FixedSizeList","isMap","Map","isDictionary","Dictionary","NONE","compareTo","other","Symbol","toStringTag","toString","constructor","isSigned","bitWidth","Int8","Int16","Int32","Int64","Uint8","Uint16","Uint32","Uint64","Precision","HALF","SINGLE","DOUBLE","precision","Float16","Float32","Float64","DateUnit","DAY","MILLISECOND","unit","DateDay","DateMillisecond","TimeUnit","SECOND","MICROSECOND","NANOSECOND","TimeSecond","TimeMillisecond","timezone","TimestampSecond","TimestampMillisecond","TimestampMicrosecond","TimestampNanosecond","IntervalUnit","DAY_TIME","YEAR_MONTH","IntervalDayTime","IntervalYearMonth","listSize","child","children","valueType","type","valueField","map","f","name","join"],"sources":["../../../../../src/lib/schema/impl/type.ts"],"sourcesContent":["// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nimport Field from './field';\n\nexport {Type} from './enum';\n\nexport type TypedIntArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray;\n\nexport type TypedFloatArray = Float32Array | Float64Array;\n\nexport type TypedArray = TypedIntArray | TypedFloatArray;\n\nexport type AnyArrayType = Array<any> | TypedIntArray | TypedFloatArray;\n\nexport class DataType {\n  static isNull(x: any): boolean {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x: any): boolean {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x: any): boolean {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x: any): boolean {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x: any): boolean {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x: any): boolean {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x: any): boolean {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x: any): boolean {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x: any): boolean {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x: any): boolean {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x: any): boolean {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x: any): boolean {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x: any): boolean {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x: any): boolean {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x: any): boolean {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x: any): boolean {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId(): Type {\n    return Type.NONE;\n  }\n\n  // get ArrayType(): AnyArrayType {\n  //   return Int8Array;\n  // }\n\n  // get ArrayType() { return Array; }\n  compareTo(other: DataType): boolean {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId(): Type {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Null';\n  }\n  toString(): string {\n    return 'Null';\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId(): Type {\n    return Type.Bool;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Bool';\n  }\n  toString(): string {\n    return 'Bool';\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  readonly isSigned: boolean;\n  readonly bitWidth: number;\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Int;\n  }\n  // get ArrayType() {\n  //   switch (this.bitWidth) {\n  //     case 8:\n  //       return this.isSigned ? Int8Array : Uint8Array;\n  //     case 16:\n  //       return this.isSigned ? Int16Array : Uint16Array;\n  //     case 32:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     case 64:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Int';\n  }\n  toString(): string {\n    return `${this.isSigned ? 'I' : 'Ui'}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  readonly precision: number;\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId(): Type {\n    return Type.Float;\n  }\n  // get ArrayType() {\n  //   switch (this.precision) {\n  //     case Precision.HALF:\n  //       return Uint16Array;\n  //     case Precision.SINGLE:\n  //       return Float32Array;\n  //     case Precision.DOUBLE:\n  //       return Float64Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Float';\n  }\n  toString(): string {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\nexport class Binary extends DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Binary;\n  }\n  toString() {\n    return 'Binary';\n  }\n  get [Symbol.toStringTag]() {\n    return 'Binary';\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId(): Type {\n    return Type.Utf8;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Utf8';\n  }\n  toString(): string {\n    return 'Utf8';\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  readonly unit: number;\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Date;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Date';\n  }\n  toString(): string {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  readonly unit: any;\n  readonly bitWidth: number;\n\n  constructor(unit: any, bitWidth: number) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Time;\n  }\n  toString(): string {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Time';\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  readonly unit: any;\n  readonly timezone: any;\n\n  constructor(unit: any, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId(): Type {\n    return Type.Timestamp;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Timestamp';\n  }\n  toString(): string {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ''}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  readonly unit: number;\n  constructor(unit: number) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Interval;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Interval';\n  }\n  toString(): string {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  readonly listSize: number;\n  readonly children: Field[];\n\n  constructor(listSize: number, child: Field) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId(): Type {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  // get ArrayType() {\n  //   return this.valueType.ArrayType;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'FixedSizeList';\n  }\n  toString(): string {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n\nexport class Struct extends DataType {\n  public readonly children: Field[];\n\n  constructor(children: Field[]) {\n    super();\n    this.children = children;\n  }\n\n  public get typeId() {\n    return Type.Struct;\n  }\n  public toString() {\n    return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(', ')}}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Struct';\n  }\n}\n"],"mappings":"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"}