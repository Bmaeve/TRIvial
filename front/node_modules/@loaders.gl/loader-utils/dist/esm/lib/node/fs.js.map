{"version":3,"file":"fs.js","names":["fs","toArrayBuffer","promisify2","promisify3","readdir","stat","readFile","readFileSync","writeFile","writeFileSync","open","close","read","fstat","createWriteStream","isSupported","Boolean","fd","Promise","resolve","reject","err","_readToArrayBuffer","start","length","buffer","Buffer","alloc","bytesRead","Error"],"sources":["../../../../src/lib/node/fs.ts"],"sourcesContent":["// fs wrapper (promisified fs + avoids bundling fs in browsers)\nimport fs from 'fs';\nimport {toArrayBuffer} from './buffer';\nimport {promisify2, promisify3} from './promisify';\n\nexport type {Stats, WriteStream} from 'fs';\n\nexport let readdir;\n/** Wrapper for Node.js fs method */\nexport let stat;\n\n/** Wrapper for Node.js fs method */\nexport let readFile;\n/** Wrapper for Node.js fs method */\nexport let readFileSync;\n/** Wrapper for Node.js fs method */\nexport let writeFile;\n/** Wrapper for Node.js fs method */\nexport let writeFileSync;\n\n// file descriptors\n\n/** Wrapper for Node.js fs method */\nexport let open;\n/** Wrapper for Node.js fs method */\nexport let close: (fd: number) => Promise<void>;\n/** Wrapper for Node.js fs method */\nexport let read;\n/** Wrapper for Node.js fs method */\nexport let fstat;\n\nexport let createWriteStream: typeof fs.createWriteStream;\n\nexport let isSupported = Boolean(fs);\n\n// paths\n\ntry {\n  /** Wrapper for Node.js fs method */\n  readdir = promisify2(fs.readdir);\n  /** Wrapper for Node.js fs method */\n  stat = promisify2(fs.stat);\n\n  /** Wrapper for Node.js fs method */\n  readFile = fs.readFile;\n  /** Wrapper for Node.js fs method */\n  readFileSync = fs.readFileSync;\n  /** Wrapper for Node.js fs method */\n  writeFile = promisify3(fs.writeFile);\n  /** Wrapper for Node.js fs method */\n  writeFileSync = fs.writeFileSync;\n\n  // file descriptors\n\n  /** Wrapper for Node.js fs method */\n  open = fs.open;\n  /** Wrapper for Node.js fs method */\n  close = (fd: number) =>\n    new Promise((resolve, reject) => fs.close(fd, (err) => (err ? reject(err) : resolve())));\n  /** Wrapper for Node.js fs method */\n  read = fs.read;\n  /** Wrapper for Node.js fs method */\n  fstat = fs.fstat;\n\n  createWriteStream = fs.createWriteStream;\n\n  isSupported = Boolean(fs);\n} catch {\n  // ignore\n}\n\nexport async function _readToArrayBuffer(fd: number, start: number, length: number) {\n  const buffer = Buffer.alloc(length);\n  const {bytesRead} = await read(fd, buffer, 0, length, start);\n  if (bytesRead !== length) {\n    throw new Error('fs.read failed');\n  }\n  return toArrayBuffer(buffer);\n}\n"],"mappings":";AACA,OAAOA,EAAE,MAAM,IAAI;AACnB,SAAQC,aAAa,QAAO,UAAU;AACtC,SAAQC,UAAU,EAAEC,UAAU,QAAO,aAAa;AAIlD,OAAO,IAAIC,OAAO;AAElB,OAAO,IAAIC,IAAI;;AAGf,OAAO,IAAIC,QAAQ;AAEnB,OAAO,IAAIC,YAAY;AAEvB,OAAO,IAAIC,SAAS;AAEpB,OAAO,IAAIC,aAAa;;AAKxB,OAAO,IAAIC,IAAI;AAEf,OAAO,IAAIC,KAAoC;AAE/C,OAAO,IAAIC,IAAI;AAEf,OAAO,IAAIC,KAAK;AAEhB,OAAO,IAAIC,iBAA8C;AAEzD,OAAO,IAAIC,WAAW,GAAGC,OAAO,CAAChB,EAAE,CAAC;;AAIpC,IAAI;EAEFI,OAAO,GAAGF,UAAU,CAACF,EAAE,CAACI,OAAO,CAAC;EAEhCC,IAAI,GAAGH,UAAU,CAACF,EAAE,CAACK,IAAI,CAAC;;EAG1BC,QAAQ,GAAGN,EAAE,CAACM,QAAQ;EAEtBC,YAAY,GAAGP,EAAE,CAACO,YAAY;EAE9BC,SAAS,GAAGL,UAAU,CAACH,EAAE,CAACQ,SAAS,CAAC;EAEpCC,aAAa,GAAGT,EAAE,CAACS,aAAa;;EAKhCC,IAAI,GAAGV,EAAE,CAACU,IAAI;EAEdC,KAAK,GAAIM,EAAU,IACjB,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAKpB,EAAE,CAACW,KAAK,CAACM,EAAE,EAAGI,GAAG,IAAMA,GAAG,GAAGD,MAAM,CAACC,GAAG,CAAC,GAAGF,OAAO,EAAG,CAAC,CAAC;EAE1FP,IAAI,GAAGZ,EAAE,CAACY,IAAI;EAEdC,KAAK,GAAGb,EAAE,CAACa,KAAK;EAEhBC,iBAAiB,GAAGd,EAAE,CAACc,iBAAiB;EAExCC,WAAW,GAAGC,OAAO,CAAChB,EAAE,CAAC;AAC3B,CAAC,CAAC,MAAM;AAER;AAEA,OAAO,eAAesB,kBAAkB,CAACL,EAAU,EAAEM,KAAa,EAAEC,MAAc,EAAE;EAClF,MAAMC,MAAM,GAAGC,MAAM,CAACC,KAAK,CAACH,MAAM,CAAC;EACnC,MAAM;IAACI;EAAS,CAAC,GAAG,MAAMhB,IAAI,CAACK,EAAE,EAAEQ,MAAM,EAAE,CAAC,EAAED,MAAM,EAAED,KAAK,CAAC;EAC5D,IAAIK,SAAS,KAAKJ,MAAM,EAAE;IACxB,MAAM,IAAIK,KAAK,CAAC,gBAAgB,CAAC;EACnC;EACA,OAAO5B,aAAa,CAACwB,MAAM,CAAC;AAC9B"}