{"version":3,"file":"node-filesystem.js","names":["NodeFileSystem","options","fetch","_fetch","dirname","fs","readdir","path","stat","info","size","Number","isDirectory","fallbackFetch","flags","mode","open","fd","close","fstat","buffer","offset","length","byteLength","position","totalBytesRead","read","bytesRead"],"sources":["../../../../src/lib/filesystems/node-filesystem.ts"],"sourcesContent":["import * as fs from '../node/fs';\nimport {IFileSystem, IRandomAccessReadFileSystem} from '../../types';\n// import {fetchFile} from \"../fetch/fetch-file\"\n// import {selectLoader} from \"../api/select-loader\";\n\ntype Stat = {\n  size: number;\n  isDirectory: () => boolean;\n  info?: fs.Stats;\n};\n\ntype ReadOptions = {\n  buffer?: Buffer;\n  offset?: number;\n  length?: number;\n  position?: number;\n};\n\n/**\n * FileSystem pass-through for Node.js\n * Compatible with BrowserFileSystem.\n * @param options\n */\nexport default class NodeFileSystem implements IFileSystem, IRandomAccessReadFileSystem {\n  // implements IFileSystem\n  constructor(options: {[key: string]: any}) {\n    this.fetch = options._fetch;\n  }\n\n  async readdir(dirname = '.', options?: {}): Promise<any[]> {\n    return await fs.readdir(dirname, options);\n  }\n\n  async stat(path: string, options?: {}): Promise<Stat> {\n    const info = await fs.stat(path, options);\n    return {size: Number(info.size), isDirectory: () => false, info};\n  }\n\n  async fetch(path: string, options: {[key: string]: any}) {\n    // Falls back to handle https:/http:/data: etc fetches\n    // eslint-disable-next-line\n    const fallbackFetch = options.fetch || this.fetch;\n    return fallbackFetch(path, options);\n  }\n\n  // implements IRandomAccessFileSystem\n  async open(path: string, flags: string | number, mode?: any): Promise<number> {\n    return await fs.open(path, flags);\n  }\n\n  async close(fd: number): Promise<void> {\n    return await fs.close(fd);\n  }\n\n  async fstat(fd: number): Promise<Stat> {\n    const info = await fs.fstat(fd);\n    return info;\n  }\n\n  async read(\n    fd: number,\n    // @ts-ignore Possibly null\n    {buffer = null, offset = 0, length = buffer.byteLength, position = null}: ReadOptions\n  ): Promise<{bytesRead: number; buffer: Buffer}> {\n    let totalBytesRead = 0;\n    // Read in loop until we get required number of bytes\n    while (totalBytesRead < length) {\n      const {bytesRead} = await fs.read(\n        fd,\n        buffer,\n        offset + totalBytesRead,\n        length - totalBytesRead,\n        position + totalBytesRead\n      );\n      totalBytesRead += bytesRead;\n    }\n    return {bytesRead: totalBytesRead, buffer};\n  }\n}\n"],"mappings":"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"}