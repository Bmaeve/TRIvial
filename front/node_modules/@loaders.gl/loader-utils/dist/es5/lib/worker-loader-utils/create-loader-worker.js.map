{"version":3,"file":"create-loader-worker.js","names":["requestId","createLoaderWorker","loader","WorkerBody","inWorkerThread","onmessage","type","payload","input","options","context","parseData","arrayBuffer","parse","parseOnMainThread","result","postMessage","message","Error","error","Promise","resolve","reject","id","onMessage","removeEventListener","addEventListener","parseSync","data","parser","parseTextSync","textDecoder","TextDecoder","decode","name","modules","worker"],"sources":["../../../../src/lib/worker-loader-utils/create-loader-worker.ts"],"sourcesContent":["/* eslint-disable no-restricted-globals */\nimport type {LoaderWithParser} from '../../types';\nimport {WorkerBody} from '@loaders.gl/worker-utils';\n// import {validateLoaderVersion} from './validate-loader-version';\n\nlet requestId = 0;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n * @param loader\n */\nexport function createLoaderWorker(loader: LoaderWithParser) {\n  // Check that we are actually in a worker thread\n  if (!WorkerBody.inWorkerThread()) {\n    return;\n  }\n\n  WorkerBody.onmessage = async (type, payload) => {\n    switch (type) {\n      case 'process':\n        try {\n          // validateLoaderVersion(loader, data.source.split('@')[1]);\n\n          const {input, options = {}, context = {}} = payload;\n\n          const result = await parseData({\n            loader,\n            arrayBuffer: input,\n            options,\n            context: {\n              ...context,\n              parse: parseOnMainThread\n            }\n          });\n          WorkerBody.postMessage('done', {result});\n        } catch (error) {\n          const message = error instanceof Error ? error.message : '';\n          WorkerBody.postMessage('error', {error: message});\n        }\n        break;\n      default:\n    }\n  };\n}\n\nfunction parseOnMainThread(arrayBuffer: ArrayBuffer, options: {[key: string]: any}): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n\n// TODO - Support byteOffset and byteLength (enabling parsing of embedded binaries without copies)\n// TODO - Why not support async loader.parse* funcs here?\n// TODO - Why not reuse a common function instead of reimplementing loader.parse* selection logic? Keeping loader small?\n// TODO - Lack of appropriate parser functions can be detected when we create worker, no need to wait until parse\nasync function parseData({loader, arrayBuffer, options, context}) {\n  let data;\n  let parser;\n  if (loader.parseSync || loader.parse) {\n    data = arrayBuffer;\n    parser = loader.parseSync || loader.parse;\n  } else if (loader.parseTextSync) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(arrayBuffer);\n    parser = loader.parseTextSync;\n  } else {\n    throw new Error(`Could not load data with ${loader.name} loader`);\n  }\n\n  // TODO - proper merge in of loader options...\n  options = {\n    ...options,\n    modules: (loader && loader.options && loader.options.modules) || {},\n    worker: false\n  };\n\n  return await parser(data, {...options}, context, loader);\n}\n"],"mappings":"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"}