{"version":3,"file":"fs.js","names":["readdir","stat","readFile","readFileSync","writeFile","writeFileSync","open","close","read","fstat","createWriteStream","isSupported","Boolean","fs","promisify2","promisify3","fd","Promise","resolve","reject","err","_readToArrayBuffer","start","length","buffer","Buffer","alloc","bytesRead","Error","toArrayBuffer"],"sources":["../../../../src/lib/node/fs.ts"],"sourcesContent":["// fs wrapper (promisified fs + avoids bundling fs in browsers)\nimport fs from 'fs';\nimport {toArrayBuffer} from './buffer';\nimport {promisify2, promisify3} from './promisify';\n\nexport type {Stats, WriteStream} from 'fs';\n\nexport let readdir;\n/** Wrapper for Node.js fs method */\nexport let stat;\n\n/** Wrapper for Node.js fs method */\nexport let readFile;\n/** Wrapper for Node.js fs method */\nexport let readFileSync;\n/** Wrapper for Node.js fs method */\nexport let writeFile;\n/** Wrapper for Node.js fs method */\nexport let writeFileSync;\n\n// file descriptors\n\n/** Wrapper for Node.js fs method */\nexport let open;\n/** Wrapper for Node.js fs method */\nexport let close: (fd: number) => Promise<void>;\n/** Wrapper for Node.js fs method */\nexport let read;\n/** Wrapper for Node.js fs method */\nexport let fstat;\n\nexport let createWriteStream: typeof fs.createWriteStream;\n\nexport let isSupported = Boolean(fs);\n\n// paths\n\ntry {\n  /** Wrapper for Node.js fs method */\n  readdir = promisify2(fs.readdir);\n  /** Wrapper for Node.js fs method */\n  stat = promisify2(fs.stat);\n\n  /** Wrapper for Node.js fs method */\n  readFile = fs.readFile;\n  /** Wrapper for Node.js fs method */\n  readFileSync = fs.readFileSync;\n  /** Wrapper for Node.js fs method */\n  writeFile = promisify3(fs.writeFile);\n  /** Wrapper for Node.js fs method */\n  writeFileSync = fs.writeFileSync;\n\n  // file descriptors\n\n  /** Wrapper for Node.js fs method */\n  open = fs.open;\n  /** Wrapper for Node.js fs method */\n  close = (fd: number) =>\n    new Promise((resolve, reject) => fs.close(fd, (err) => (err ? reject(err) : resolve())));\n  /** Wrapper for Node.js fs method */\n  read = fs.read;\n  /** Wrapper for Node.js fs method */\n  fstat = fs.fstat;\n\n  createWriteStream = fs.createWriteStream;\n\n  isSupported = Boolean(fs);\n} catch {\n  // ignore\n}\n\nexport async function _readToArrayBuffer(fd: number, start: number, length: number) {\n  const buffer = Buffer.alloc(length);\n  const {bytesRead} = await read(fd, buffer, 0, length, start);\n  if (bytesRead !== length) {\n    throw new Error('fs.read failed');\n  }\n  return toArrayBuffer(buffer);\n}\n"],"mappings":";;;;;;;;;;AACA;AACA;AACA;;AAIO,IAAIA,OAAO;AAAC;AAEZ,IAAIC,IAAI;;AAAC;AAGT,IAAIC,QAAQ;AAAC;AAEb,IAAIC,YAAY;AAAC;AAEjB,IAAIC,SAAS;AAAC;AAEd,IAAIC,aAAa;;AAAC;;AAKlB,IAAIC,IAAI;AAAC;AAET,IAAIC,KAAoC;AAAC;AAEzC,IAAIC,IAAI;AAAC;AAET,IAAIC,KAAK;AAAC;AAEV,IAAIC,iBAA8C;AAAC;AAEnD,IAAIC,WAAW,GAAGC,OAAO,CAACC,WAAE,CAAC;;AAAC;;AAIrC,IAAI;EAEF,kBAAAb,OAAO,GAAG,IAAAc,qBAAU,EAACD,WAAE,CAACb,OAAO,CAAC;EAEhC,eAAAC,IAAI,GAAG,IAAAa,qBAAU,EAACD,WAAE,CAACZ,IAAI,CAAC;;EAG1B,mBAAAC,QAAQ,GAAGW,WAAE,CAACX,QAAQ;EAEtB,uBAAAC,YAAY,GAAGU,WAAE,CAACV,YAAY;EAE9B,oBAAAC,SAAS,GAAG,IAAAW,qBAAU,EAACF,WAAE,CAACT,SAAS,CAAC;EAEpC,wBAAAC,aAAa,GAAGQ,WAAE,CAACR,aAAa;;EAKhC,eAAAC,IAAI,GAAGO,WAAE,CAACP,IAAI;EAEd,gBAAAC,KAAK,GAAG,eAACS,EAAU;IAAA,OACjB,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM;MAAA,OAAKN,WAAE,CAACN,KAAK,CAACS,EAAE,EAAE,UAACI,GAAG;QAAA,OAAMA,GAAG,GAAGD,MAAM,CAACC,GAAG,CAAC,GAAGF,OAAO,EAAE;MAAA,CAAC,CAAC;IAAA,EAAC;EAAA;EAE1F,eAAAV,IAAI,GAAGK,WAAE,CAACL,IAAI;EAEd,gBAAAC,KAAK,GAAGI,WAAE,CAACJ,KAAK;EAEhB,4BAAAC,iBAAiB,GAAGG,WAAE,CAACH,iBAAiB;EAExC,sBAAAC,WAAW,GAAGC,OAAO,CAACC,WAAE,CAAC;AAC3B,CAAC,CAAC,gBAAM;AAER;AAAC,SAEqBQ,kBAAkB;EAAA;AAAA;AAAA;EAAA,gFAAjC,iBAAkCL,EAAU,EAAEM,KAAa,EAAEC,MAAc;IAAA;IAAA;MAAA;QAAA;UAAA;YAC1EC,MAAM,GAAGC,MAAM,CAACC,KAAK,CAACH,MAAM,CAAC;YAAA;YAAA,OACTf,IAAI,CAACQ,EAAE,EAAEQ,MAAM,EAAE,CAAC,EAAED,MAAM,EAAED,KAAK,CAAC;UAAA;YAAA;YAArDK,SAAS,eAATA,SAAS;YAAA,MACZA,SAAS,KAAKJ,MAAM;cAAA;cAAA;YAAA;YAAA,MAChB,IAAIK,KAAK,CAAC,gBAAgB,CAAC;UAAA;YAAA,iCAE5B,IAAAC,qBAAa,EAACL,MAAM,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC7B;EAAA;AAAA"}