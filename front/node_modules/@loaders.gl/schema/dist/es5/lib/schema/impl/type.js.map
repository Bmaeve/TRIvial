{"version":3,"file":"type.js","names":["DataType","Type","NONE","other","x","typeId","Null","Int","Float","Binary","Utf8","Bool","Decimal","Date","Time","Timestamp","Interval","List","Struct","Union","FixedSizeBinary","FixedSizeList","Map","Dictionary","Symbol","toStringTag","isSigned","bitWidth","Int8","Int16","Int32","Int64","Uint8","Uint16","Uint32","Uint64","Precision","HALF","SINGLE","DOUBLE","precision","Float16","Float32","Float64","DateUnit","DAY","MILLISECOND","unit","DateDay","DateMillisecond","TimeUnit","SECOND","MICROSECOND","NANOSECOND","TimeSecond","TimeMillisecond","timezone","TimestampSecond","TimestampMillisecond","TimestampMicrosecond","TimestampNanosecond","IntervalUnit","DAY_TIME","YEAR_MONTH","IntervalDayTime","IntervalYearMonth","listSize","child","children","type","valueType","map","f","name","join"],"sources":["../../../../../src/lib/schema/impl/type.ts"],"sourcesContent":["// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nimport Field from './field';\n\nexport {Type} from './enum';\n\nexport type TypedIntArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray;\n\nexport type TypedFloatArray = Float32Array | Float64Array;\n\nexport type TypedArray = TypedIntArray | TypedFloatArray;\n\nexport type AnyArrayType = Array<any> | TypedIntArray | TypedFloatArray;\n\nexport class DataType {\n  static isNull(x: any): boolean {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x: any): boolean {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x: any): boolean {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x: any): boolean {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x: any): boolean {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x: any): boolean {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x: any): boolean {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x: any): boolean {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x: any): boolean {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x: any): boolean {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x: any): boolean {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x: any): boolean {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x: any): boolean {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x: any): boolean {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x: any): boolean {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x: any): boolean {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId(): Type {\n    return Type.NONE;\n  }\n\n  // get ArrayType(): AnyArrayType {\n  //   return Int8Array;\n  // }\n\n  // get ArrayType() { return Array; }\n  compareTo(other: DataType): boolean {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId(): Type {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Null';\n  }\n  toString(): string {\n    return 'Null';\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId(): Type {\n    return Type.Bool;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Bool';\n  }\n  toString(): string {\n    return 'Bool';\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  readonly isSigned: boolean;\n  readonly bitWidth: number;\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Int;\n  }\n  // get ArrayType() {\n  //   switch (this.bitWidth) {\n  //     case 8:\n  //       return this.isSigned ? Int8Array : Uint8Array;\n  //     case 16:\n  //       return this.isSigned ? Int16Array : Uint16Array;\n  //     case 32:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     case 64:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Int';\n  }\n  toString(): string {\n    return `${this.isSigned ? 'I' : 'Ui'}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  readonly precision: number;\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId(): Type {\n    return Type.Float;\n  }\n  // get ArrayType() {\n  //   switch (this.precision) {\n  //     case Precision.HALF:\n  //       return Uint16Array;\n  //     case Precision.SINGLE:\n  //       return Float32Array;\n  //     case Precision.DOUBLE:\n  //       return Float64Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Float';\n  }\n  toString(): string {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\nexport class Binary extends DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Binary;\n  }\n  toString() {\n    return 'Binary';\n  }\n  get [Symbol.toStringTag]() {\n    return 'Binary';\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId(): Type {\n    return Type.Utf8;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Utf8';\n  }\n  toString(): string {\n    return 'Utf8';\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  readonly unit: number;\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Date;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Date';\n  }\n  toString(): string {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  readonly unit: any;\n  readonly bitWidth: number;\n\n  constructor(unit: any, bitWidth: number) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Time;\n  }\n  toString(): string {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Time';\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  readonly unit: any;\n  readonly timezone: any;\n\n  constructor(unit: any, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId(): Type {\n    return Type.Timestamp;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Timestamp';\n  }\n  toString(): string {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ''}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  readonly unit: number;\n  constructor(unit: number) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Interval;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Interval';\n  }\n  toString(): string {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  readonly listSize: number;\n  readonly children: Field[];\n\n  constructor(listSize: number, child: Field) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId(): Type {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  // get ArrayType() {\n  //   return this.valueType.ArrayType;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'FixedSizeList';\n  }\n  toString(): string {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n\nexport class Struct extends DataType {\n  public readonly children: Field[];\n\n  constructor(children: Field[]) {\n    super();\n    this.children = children;\n  }\n\n  public get typeId() {\n    return Type.Struct;\n  }\n  public toString() {\n    return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(', ')}}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Struct';\n  }\n}\n"],"mappings":"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"}