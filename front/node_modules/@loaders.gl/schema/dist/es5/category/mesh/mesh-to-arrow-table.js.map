{"version":3,"file":"mesh-to-arrow-table.js","names":["convertMeshToArrowTable","mesh","batchSize","vectors","fields","attributeKey","attributes","attribute","value","size","type","getArrowType","vector","getArrowVector","listType","FixedSizeList","Field","field","makeMeshAttributeMetadata","data","Data","length","undefined","listVector","FixedSizeListVector","push","schema","Schema","metadata","Map","recordBatch","RecordBatch","table","Table"],"sources":["../../../../src/category/mesh/mesh-to-arrow-table.ts"],"sourcesContent":["import {\n  Table,\n  Schema,\n  RecordBatch,\n  FixedSizeList,\n  Field,\n  Data,\n  FixedSizeListVector\n} from 'apache-arrow/Arrow.dom';\nimport {AbstractVector} from 'apache-arrow/vector';\nimport {getArrowType, getArrowVector} from '../../lib/arrow/arrow-type-utils';\nimport type {Mesh} from './mesh-types';\nimport {makeMeshAttributeMetadata} from './deduce-mesh-schema';\n\n/**\n * * Convert a loaders.gl Mesh to an Apache Arrow Table\n * @param mesh\n * @param metadata\n * @param batchSize\n * @returns\n */\nexport function convertMeshToArrowTable(mesh: Mesh, batchSize?: number): Table {\n  const vectors: AbstractVector[] = [];\n  const fields: Field[] = [];\n  for (const attributeKey in mesh.attributes) {\n    const attribute = mesh.attributes[attributeKey];\n    const {value, size = 1} = attribute;\n    const type = getArrowType(value);\n    const vector = getArrowVector(value);\n    const listType = new FixedSizeList(size, new Field('value', type));\n    const field = new Field(attributeKey, listType, false, makeMeshAttributeMetadata(attribute));\n    const data = new Data(listType, 0, value.length / size, 0, undefined, [vector]);\n    const listVector = new FixedSizeListVector(data);\n    vectors.push(listVector);\n    fields.push(field);\n  }\n  const schema = new Schema(fields, mesh?.schema?.metadata || new Map<string, string>());\n  const recordBatch = new RecordBatch(schema, vectors[0].length, vectors);\n  const table = new Table(schema, recordBatch);\n  return table;\n}\n"],"mappings":";;;;;;AAAA;AAUA;AAEA;AASO,SAASA,uBAAuB,CAACC,IAAU,EAAEC,SAAkB,EAAS;EAAA;EAC7E,IAAMC,OAAyB,GAAG,EAAE;EACpC,IAAMC,MAAe,GAAG,EAAE;EAC1B,KAAK,IAAMC,YAAY,IAAIJ,IAAI,CAACK,UAAU,EAAE;IAC1C,IAAMC,SAAS,GAAGN,IAAI,CAACK,UAAU,CAACD,YAAY,CAAC;IAC/C,IAAOG,KAAK,GAAcD,SAAS,CAA5BC,KAAK;MAAA,kBAAcD,SAAS,CAArBE,IAAI;MAAJA,IAAI,gCAAG,CAAC;IACtB,IAAMC,IAAI,GAAG,IAAAC,4BAAY,EAACH,KAAK,CAAC;IAChC,IAAMI,MAAM,GAAG,IAAAC,8BAAc,EAACL,KAAK,CAAC;IACpC,IAAMM,QAAQ,GAAG,IAAIC,oBAAa,CAACN,IAAI,EAAE,IAAIO,YAAK,CAAC,OAAO,EAAEN,IAAI,CAAC,CAAC;IAClE,IAAMO,KAAK,GAAG,IAAID,YAAK,CAACX,YAAY,EAAES,QAAQ,EAAE,KAAK,EAAE,IAAAI,2CAAyB,EAACX,SAAS,CAAC,CAAC;IAC5F,IAAMY,IAAI,GAAG,IAAIC,WAAI,CAACN,QAAQ,EAAE,CAAC,EAAEN,KAAK,CAACa,MAAM,GAAGZ,IAAI,EAAE,CAAC,EAAEa,SAAS,EAAE,CAACV,MAAM,CAAC,CAAC;IAC/E,IAAMW,UAAU,GAAG,IAAIC,0BAAmB,CAACL,IAAI,CAAC;IAChDhB,OAAO,CAACsB,IAAI,CAACF,UAAU,CAAC;IACxBnB,MAAM,CAACqB,IAAI,CAACR,KAAK,CAAC;EACpB;EACA,IAAMS,MAAM,GAAG,IAAIC,aAAM,CAACvB,MAAM,EAAE,CAAAH,IAAI,aAAJA,IAAI,uCAAJA,IAAI,CAAEyB,MAAM,iDAAZ,aAAcE,QAAQ,KAAI,IAAIC,GAAG,EAAkB,CAAC;EACtF,IAAMC,WAAW,GAAG,IAAIC,kBAAW,CAACL,MAAM,EAAEvB,OAAO,CAAC,CAAC,CAAC,CAACkB,MAAM,EAAElB,OAAO,CAAC;EACvE,IAAM6B,KAAK,GAAG,IAAIC,YAAK,CAACP,MAAM,EAAEI,WAAW,CAAC;EAC5C,OAAOE,KAAK;AACd"}