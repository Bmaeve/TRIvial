{"version":3,"file":"worker-thread.js","names":["NOOP","WorkerThread","props","name","source","url","assert","onMessage","onError","error","console","log","worker","isBrowser","_createBrowserWorker","_createNodeWorker","terminate","terminated","Boolean","data","transferList","getTransferList","postMessage","event","message","lineno","colno","Error","_loadableURL","getLoadableWorkerURL","Worker","onmessage","onerror","_getErrorFromErrorEvent","onmessageerror","absolute","includes","startsWith","NodeWorker","eval","on","code"],"sources":["../../../../src/lib/worker-farm/worker-thread.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport {NodeWorker, NodeWorkerType} from '../node/worker_threads';\nimport {isBrowser} from '../env-utils/globals';\nimport {assert} from '../env-utils/assert';\nimport {getLoadableWorkerURL} from '../worker-utils/get-loadable-worker-url';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst NOOP = () => {};\n\nexport type WorkerThreadProps = {\n  name: string;\n  source?: string;\n  url?: string;\n};\n\n/**\n * Represents one worker thread\n */\nexport default class WorkerThread {\n  readonly name: string;\n  readonly source: string | undefined;\n  readonly url: string | undefined;\n  terminated: boolean = false;\n  worker: Worker | NodeWorkerType;\n  onMessage: (message: any) => void;\n  onError: (error: Error) => void;\n\n  private _loadableURL: string = '';\n\n  /** Checks if workers are supported on this platform */\n  static isSupported(): boolean {\n    return (\n      (typeof Worker !== 'undefined' && isBrowser) ||\n      (typeof NodeWorker !== 'undefined' && !isBrowser)\n    );\n  }\n\n  constructor(props: WorkerThreadProps) {\n    const {name, source, url} = props;\n    assert(source || url); // Either source or url must be defined\n    this.name = name;\n    this.source = source;\n    this.url = url;\n    this.onMessage = NOOP;\n    this.onError = (error) => console.log(error); // eslint-disable-line\n\n    this.worker = isBrowser ? this._createBrowserWorker() : this._createNodeWorker();\n  }\n\n  /**\n   * Terminate this worker thread\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    this.onMessage = NOOP;\n    this.onError = NOOP;\n    this.worker.terminate(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    this.terminated = true;\n  }\n\n  get isRunning() {\n    return Boolean(this.onMessage);\n  }\n\n  /**\n   * Send a message to this worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   * @param transferList If not supplied, calculated automatically by traversing data\n   */\n  postMessage(data: any, transferList?: any[]): void {\n    transferList = transferList || getTransferList(data);\n    // @ts-ignore\n    this.worker.postMessage(data, transferList);\n  }\n\n  // PRIVATE\n\n  /**\n   * Generate a standard Error from an ErrorEvent\n   * @param event\n   */\n  _getErrorFromErrorEvent(event: ErrorEvent): Error {\n    // Note Error object does not have the expected fields if loading failed completely\n    // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n    // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n    let message = 'Failed to load ';\n    message += `worker ${this.name} from ${this.url}. `;\n    if (event.message) {\n      message += `${event.message} in `;\n    }\n    // const hasFilename = event.filename && !event.filename.startsWith('blob:');\n    // message += hasFilename ? event.filename : this.source.slice(0, 100);\n    if (event.lineno) {\n      message += `:${event.lineno}:${event.colno}`;\n    }\n    return new Error(message);\n  }\n\n  /**\n   * Creates a worker thread on the browser\n   */\n  _createBrowserWorker(): Worker {\n    this._loadableURL = getLoadableWorkerURL({source: this.source, url: this.url});\n    const worker = new Worker(this._loadableURL, {name: this.name});\n\n    worker.onmessage = (event) => {\n      if (!event.data) {\n        this.onError(new Error('No data received'));\n      } else {\n        this.onMessage(event.data);\n      }\n    };\n    // This callback represents an uncaught exception in the worker thread\n    worker.onerror = (error: ErrorEvent): void => {\n      this.onError(this._getErrorFromErrorEvent(error));\n      this.terminated = true;\n    };\n    // TODO - not clear when this would be called, for now just log in case it happens\n    worker.onmessageerror = (event) => console.error(event); // eslint-disable-line\n\n    return worker;\n  }\n\n  /**\n   * Creates a worker thread in node.js\n   * @todo https://nodejs.org/api/async_hooks.html#async-resource-worker-pool\n   */\n  _createNodeWorker(): NodeWorkerType {\n    let worker: NodeWorkerType;\n    if (this.url) {\n      // Make sure relative URLs start with './'\n      const absolute = this.url.includes(':/') || this.url.startsWith('/');\n      const url = absolute ? this.url : `./${this.url}`;\n      // console.log('Starting work from', url);\n      worker = new NodeWorker(url, {eval: false});\n    } else if (this.source) {\n      worker = new NodeWorker(this.source, {eval: true});\n    } else {\n      throw new Error('no worker');\n    }\n    worker.on('message', (data) => {\n      // console.error('message', data);\n      this.onMessage(data);\n    });\n    worker.on('error', (error) => {\n      // console.error('error', error);\n      this.onError(error);\n    });\n    worker.on('exit', (code) => {\n      // console.error('exit', code);\n    });\n    return worker;\n  }\n}\n"],"mappings":"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"}