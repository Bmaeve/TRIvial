{"version":3,"file":"async-queue.js","names":["Symbol","asyncIterator","AsyncQueue","_values","_settlers","_closed","value","enqueue","Error","length","settler","shift","reject","resolve","push","done","Promise","undefined"],"sources":["../../../../src/lib/async-queue/async-queue.ts"],"sourcesContent":["// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\n/**\n * Async Queue\n * - AsyncIterable: An async iterator can be\n * - Values can be pushed onto the queue\n * @example\n *   const asyncQueue = new AsyncQueue();\n *   setTimeout(() => asyncQueue.enqueue('tick'), 1000);\n *   setTimeout(() => asyncQueue.enqueue(new Error('done')), 10000);\n *   for await (const value of asyncQueue) {\n *     console.log(value); // tick\n *   }\n */\nexport default class AsyncQueue<T> {\n  private _values: any[];\n  private _settlers: any[];\n  private _closed: boolean;\n\n  constructor() {\n    this._values = []; // enqueues > dequeues\n    this._settlers = []; // dequeues > enqueues\n    this._closed = false;\n  }\n\n  /** Return an async iterator for this queue */\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  /** Push a new value - the async iterator will yield a promise resolved to this value */\n  push(value: T): void {\n    return this.enqueue(value);\n  }\n\n  /**\n   * Push a new value - the async iterator will yield a promise resolved to this value\n   * Add an error - the async iterator will yield a promise rejected with this value\n   */\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.shift();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.push(value);\n    }\n  }\n\n  /** Indicate that we not waiting for more values - The async iterator will be done */\n  close(): void {\n    while (this._settlers.length > 0) {\n      const settler = this._settlers.shift();\n      settler.resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  // ITERATOR IMPLEMENTATION\n\n  /** @returns a Promise for an IteratorResult */\n  next(): Promise<IteratorResult<T, any>> {\n    // If values in queue, yield the first value\n    if (this._values.length > 0) {\n      const value = this._values.shift();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({done: false, value});\n    }\n\n    // If queue is closed, the iterator is done\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true, value: undefined});\n    }\n\n    // Yield a promise that waits for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.push({resolve, reject});\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;wBA2BGA,MAAM,CAACC,aAAa;AAAA,IAZFC,UAAU;EAK7B,sBAAc;IAAA;IAAA;IAAA;IAAA;IACZ,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,OAAO,GAAG,KAAK;EACtB;;EAAC;IAAA;IAAA;IAGD,iBAA2C;MACzC,OAAO,IAAI;IACb;;EAAC;IAAA;IAAA;IAGD,cAAKC,KAAQ,EAAQ;MACnB,OAAO,IAAI,CAACC,OAAO,CAACD,KAAK,CAAC;IAC5B;;EAAC;IAAA;IAAA;IAMD,iBAAQA,KAAgB,EAAQ;MAC9B,IAAI,IAAI,CAACD,OAAO,EAAE;QAChB,MAAM,IAAIG,KAAK,CAAC,QAAQ,CAAC;MAC3B;MAEA,IAAI,IAAI,CAACJ,SAAS,CAACK,MAAM,GAAG,CAAC,EAAE;QAC7B,IAAI,IAAI,CAACN,OAAO,CAACM,MAAM,GAAG,CAAC,EAAE;UAC3B,MAAM,IAAID,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QACA,IAAME,OAAO,GAAG,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;QACtC,IAAIL,KAAK,YAAYE,KAAK,EAAE;UAC1BE,OAAO,CAACE,MAAM,CAACN,KAAK,CAAC;QACvB,CAAC,MAAM;UACLI,OAAO,CAACG,OAAO,CAAC;YAACP,KAAK,EAALA;UAAK,CAAC,CAAC;QAC1B;MACF,CAAC,MAAM;QACL,IAAI,CAACH,OAAO,CAACW,IAAI,CAACR,KAAK,CAAC;MAC1B;IACF;;EAAC;IAAA;IAAA;IAGD,iBAAc;MACZ,OAAO,IAAI,CAACF,SAAS,CAACK,MAAM,GAAG,CAAC,EAAE;QAChC,IAAMC,OAAO,GAAG,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;QACtCD,OAAO,CAACG,OAAO,CAAC;UAACE,IAAI,EAAE;QAAI,CAAC,CAAC;MAC/B;MACA,IAAI,CAACV,OAAO,GAAG,IAAI;IACrB;;EAAC;IAAA;IAAA;;IAKD,gBAAwC;MAAA;MAEtC,IAAI,IAAI,CAACF,OAAO,CAACM,MAAM,GAAG,CAAC,EAAE;QAC3B,IAAMH,KAAK,GAAG,IAAI,CAACH,OAAO,CAACQ,KAAK,EAAE;QAClC,IAAIL,KAAK,YAAYE,KAAK,EAAE;UAC1B,OAAOQ,OAAO,CAACJ,MAAM,CAACN,KAAK,CAAC;QAC9B;QACA,OAAOU,OAAO,CAACH,OAAO,CAAC;UAACE,IAAI,EAAE,KAAK;UAAET,KAAK,EAALA;QAAK,CAAC,CAAC;MAC9C;;MAGA,IAAI,IAAI,CAACD,OAAO,EAAE;QAChB,IAAI,IAAI,CAACD,SAAS,CAACK,MAAM,GAAG,CAAC,EAAE;UAC7B,MAAM,IAAID,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QACA,OAAOQ,OAAO,CAACH,OAAO,CAAC;UAACE,IAAI,EAAE,IAAI;UAAET,KAAK,EAAEW;QAAS,CAAC,CAAC;MACxD;;MAGA,OAAO,IAAID,OAAO,CAAC,UAACH,OAAO,EAAED,MAAM,EAAK;QACtC,KAAI,CAACR,SAAS,CAACU,IAAI,CAAC;UAACD,OAAO,EAAPA,OAAO;UAAED,MAAM,EAANA;QAAM,CAAC,CAAC;MACxC,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA;AAAA"}