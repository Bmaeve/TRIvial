{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-286c1b68\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"viewerDiv\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["/home/jonathan/Downloads/TRIvial/FRONTS/src/components/ITowns.vue"],"sourcesContent":["<template>\n  <div id=\"viewerDiv\">\n\n  </div>\n</template>\n\n<script>\nimport { FileSource, THREE, proj4, Extent, PlanarView, WMSSource, ColorLayer, ElevationLayer, Style, FeatureGeometryLayer } from \"../../node_modules/itowns/dist/itowns\";\n\nexport default {\n  name: 'MyItowns',\n  mounted() {\n    // Retrieve the view container\n    const viewerDiv = document.getElementById('viewerDiv');\n\n    // Define the view geographic extent\n    proj4.defs(\n      'EPSG:2154',\n      '+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs'\n    );\n    const viewExtent = new Extent(\n      'EPSG:2154',\n      644500.0, 659499.99,\n      6857500.0, 6867499.99,\n    );\n\n    // Define the camera initial placement\n    const placement = {\n      coord: viewExtent.center(),\n      tilt: 12,\n      heading: 40,\n      range: 16000,\n    };\n\n    // Create the planar view\n    const view = new PlanarView(viewerDiv, viewExtent, {\n      placement: placement,\n    });\n\n    // Define the source of the ortho-images\n    const sourceOrtho = new WMSSource({\n      url: \"https://wxs.ign.fr/3ht7xcw6f7nciopo16etuqp2/geoportail/r/wms\",\n      name: \"HR.ORTHOIMAGERY.ORTHOPHOTOS\",\n      format: \"image/png\",\n      crs: 'EPSG:2154',\n      extent: viewExtent,\n    });\n    // Create the ortho-images ColorLayer and add it to the view\n    const layerOrtho = new ColorLayer('Ortho', { source: sourceOrtho });\n    view.addLayer(layerOrtho);\n\n    // Define the source of the dem data\n    const sourceDEM = new WMSSource({\n      url: \"https://wxs.ign.fr/3ht7xcw6f7nciopo16etuqp2/geoportail/r/wms\",\n      name: \"ELEVATION.ELEVATIONGRIDCOVERAGE.HIGHRES\",\n      format: \"image/x-bil;bits=32\",\n      crs: 'EPSG:2154',\n      extent: viewExtent,\n    });\n    // Create the dem ElevationLayer and add it to the view\n    const layerDEM = new ElevationLayer('DEM', { source: sourceDEM });\n    view.addLayer(layerDEM);\n\n\n// Static Json solution\n\n    function setExtrusion(properties) {\n      return properties.HAUTEUR;\n    }\n    function setColor() {\n      return new THREE.Color(0xff0000);\n    }\n    const batsource = new FileSource({\n      url: \"http://localhost:3000/\",\n      crs: 'EPSG:2154',\n      format: 'application/json',\n    });\n\n    let basic = new FeatureGeometryLayer('basic', {\n      // Use a FileSource to load a single file once\n      source: batsource,\n      transparent: true,\n      opacity: 0.7,\n      //zoom: { min: 10 },\n      style: new Style({\n        fill: {\n          color: setColor,\n          base_altitude: 28,\n          extrusion_height: setExtrusion,\n        }\n      })\n    });\n\n\n    view.addLayer(basic);\n\n\n\n\n// Api rest solution  \n\nfetch('http://localhost:3000/getBatis').then(res => res.json()).then(data =>{\n\nfunction setExtrusions(properties) {\nreturn properties.hauteur;\n}\n\nlet marne = new FeatureGeometryLayer('Marne', {\n          // Use a FileSource to load a single file once\n          source: new FileSource({\n            fetchedData: data,\n               crs: 'EPSG:2154',\n               format: 'application/json',\n           }),\n          transparent: true,\n          opacity: 0.7,\n          style: new Style({\n              fill: {\n                  color: new THREE.Color(0xbbffbb),\n                  base_altitude: 28,\n                  extrusion_height: setExtrusions,\n              }\n          })\n\n       });\n       view.addLayer(marne);\n})\n\n  }\n}\n</script>\n\n\n<style scoped>\n#viewerDiv {\n  margin: auto;\n  height: 800px;\n  width: 100%;\n  padding: 0;\n}\n</style>\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAW;;uBAAnBC,mBAAA,CAEM,OAFNC,UAEM"},"metadata":{},"sourceType":"module","externalDependencies":[]}